
<div class="modal-header">
  <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
  <h4 class="modal-title" id="myModalLabel"><%= I18n.t('dashboard_new_trade') %></h4>
</div>
<div class="modal-body">
  
    <%= form_for(@trade, remote: true, :url => create_dashboard_path, :html => {:class => 'form-horizontal', :role => 'form'} ) do |f| %>

    <%= f.hidden_field :User_id, :value => current_user.id %>

    <div class="form-group">
        <%= f.label I18n.t('dashboard_broker_account'), class:'col-xs-3 col-sm-3 col-md-3' %>
        <div class="col-xs-5 col-sm-5 col-md-5">
          <%= f.collection_select(:BrokerAccount_id, @brokerAccount, :id, :name ,{prompt: I18n.t('dashboard_select_account')},  {class: "form-control selectpicker", :name => "trade[BrokerAccount_id]", :onchange => 'get_balance(this.value)', :data => {:validation => "required", "live-search" => "true"} } ) %>
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4">
          <%= I18n.t('dashboard_account_balance') %>: <span id="lbl_account_balance"></span>
        </div>
    </div>

    <div class="form-group">
        <%= f.label I18n.t('dashboard_strategy'), class:'col-xs-3 col-sm-3 col-md-3' %>
        <div class="col-xs-5 col-sm-5 col-md-5">

          <%= f.collection_select(:Strategy_id, @strategy, :id, :Name , {prompt: I18n.t('dashboard_select_strategy')}, {class: "form-control selectpicker", :name => "trade[Strategy_id]", :onchange => 'get_strategy_success_rate(this.value)', :data => {:validation => "required", "live-search" => "true"}}) %>
        </div>  

        <div class="col-xs-4 col-sm-4 col-md-4">
          <%= I18n.t('dashboard_effective') %>: <span id="lbl_strategy_rate"></span>
        </div>
    </div>

    <div class="form-group">
        <%= f.label I18n.t('dashboard_azzet'), class:'col-xs-3 col-sm-3 col-md-3' %>
        <div class="col-xs-5 col-sm-5 col-md-5">
           <%= f.collection_select(:Azzet_id, @azzets, :id, :Name , {title: I18n.t('dashboard_select_azzet')}, {class: "form-control selectpicker", :name => "trade[Azzet_id]", :onchange => 'get_azzet_success_rate(this.value)', :data => {:validation => "required", "live-search" => "true", :size => "10"}}) %>
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4">
          <%= I18n.t('dashboard_effective') %>: <span id="lbl_azzet_rate"></span>
        </div>
    </div>

    <div class="form-group">
      <%= f.label I18n.t('dashboard_option'), class:'col-xs-3 col-sm-3 col-md-3' %>
      <div class="col-xs-9 col-sm-9 col-md-9">
          <div class="btn-group" data-toggle="buttons">
            <label class="btn btn-success">
              <%= radio_button_tag('trade[Option]', 'CALL') %> CALL
            </label>
            <label class="btn btn-danger">
              <%= radio_button_tag('trade[Option]', 'PUT') %> PUT
            </label>
          </div>
      </div>
    </div>

    <div class="form-group ">
        <%= f.label I18n.t('dashboard_amount'), class:'col-xs-3 col-sm-3 col-md-3' %>
        <div class="col-xs-5 col-sm-5 col-md-5">
          <div class="input-group">
            <div class="input-group-addon">
              <i class="icon-dollar"></i>
            </div>
            <%= f.number_field :Amount, class:'form-control', :onchange => 'calcule_percent()', :data => {:validation => "required"} %>
          </div>       
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4">
          <span id="lbl_percent_suggested"></span>
        </div>
    </div>

    <div class="form-group">
        <%= f.label I18n.t('dashboard_onprofit'), class:'col-xs-3 col-sm-3 col-md-3' %>
        <div class="col-xs-5 col-sm-5 col-md-5">
          <div class="input-group">
            <div class="input-group-addon">
              <i class="icon-percent"></i>
            </div>
            <%= f.text_field :OnProfit, class:'form-control', type:'text', :onchange => 'calcule_onprofit()', :data => {:validation => "number"} %>
          </div>
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4">
          <span id="lbl_onprofit_payout"></span>
        </div>        
    </div>

    <div class="form-group">
        <%= f.label I18n.t('dashboard_onloss'), class:'col-xs-3 col-sm-3 col-md-3' %>
        <div class="col-xs-5 col-sm-5 col-md-5">
          <div class="input-group">
             <div class="input-group-addon">
              <i class="icon-percent"></i>
            </div>
            <%= f.text_field :OnLoss, class:'form-control', type:'text', :onchange => 'calcule_onlost()', :data => {:validation => "number"} %>
          </div>
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4">
          <span id="lbl_onlost_payout"></span>
        </div>
    </div>

    <div class="form-group">
        <%= f.label I18n.t('dashboard_position'), class:'col-xs-3 col-sm-3 col-md-3' %>
        <div class="col-xs-5 col-sm-5 col-md-5">
            <%= f.text_field :Position, class:'form-control', type:'text' %>
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4">
        </div>
    </div>

    <%= f.hidden_field :Payout, :value => '' %>
    <%= f.hidden_field :Result, :value => '' %>
    <%= f.hidden_field :UseMartingale, :value => 'false' %>
    <%= f.hidden_field :UseCompoundInterest, :value => 'false' %>

    <div class="modal-footer">
      <button type="button" class="btn btn-default" data-dismiss="modal"><%= I18n.t('dashboard_button_close') %></button>
      <%= f.submit I18n.t('dashboard_button_create'), class: 'btn btn-primary' %>
    </div>
  <% end %>
</div>
      
<script type="text/javascript">
  var account_balance = 0;
  var maximum_percent_per_trade = 0;

  $.ajax({
    type: "GET",
    url: "/settings/user_settings",
    success: function(data){

      maximum_percent_per_trade = data[0] != null ? data[0].MaximumPercentPerTrade : 0;
    }
  });

  $.validate();

  $('.selectpicker').selectpicker({});

  inicialize_form();


  function inicialize_form()
  {
    selected_account = getCookie("selected_account");
    if(selected_account != "")
    {
      $("#trade_BrokerAccount_id").val(selected_account);
      $("#trade_BrokerAccount_id").change();
    }

    selected_strategy = getCookie("selected_strategy");
    if(selected_strategy != "")
    {
      $("#trade_Strategy_id").val(selected_strategy);
      $("#trade_Strategy_id").change();
    }

    selected_azzet = getCookie("selected_azzet");
    if(selected_azzet != "")
    {
      $("#trade_Azzet_id").val(selected_azzet);
      $("#trade_Azzet_id").change();
    }

    $("#trade_OnLoss").val("0");    
  }

  function get_balance (accountId) {

    //set cookie
    setCookie("selected_account", accountId, 1);

    $.ajax({
      type: "GET",
      url: "/broker_accounts/" + accountId + "/current_balance",
      success: function(data){

        if(data != null)
        {
          account_balance = (data).toFixed(2);
          $("#lbl_account_balance").text("$ " + account_balance);


          //Calcular la cantidad a invertir sugerida
          amount_suggested = Math.round((maximum_percent_per_trade * account_balance) / 100);
          $("#trade_Amount").val(amount_suggested);
          $("#lbl_percent_suggested").text(maximum_percent_per_trade + " %");
        }
        else
        {
          $("#lbl_account_balance").text("Debe ingresar el saldo de la cuenta");
        }
      }
    });
  }

  function get_strategy_success_rate(strategyId) {

    //set cookie
    setCookie("selected_strategy", strategyId, 1);

    $.ajax({
      type: "GET",
      url: "/strategies/" + strategyId + "/total_trades",
      success: function(data){

        if(data.length > 0)
        {
          won = tie = lost = 0;

          $.each(data, function (i, item) {
            if (item.Result === 'WON') {
              won = item.total_trades;
            }
            else if (item.Result === 'TIE') {
              tie = item.total_trades;
            }
            else if (item.Result === 'LOST') {
              lost = item.total_trades;
            }
          });

          total_trades = won + tie + lost;
          success_rate = Math.round(((won + tie) / total_trades) * 100);
          
          $("#lbl_strategy_rate").text(success_rate + " %");
        }
        else
        {
          $("#lbl_strategy_rate").text("N/A"); 
        }
      }
    });
  }

  function get_azzet_success_rate(azzetId) {
    
    //set cookie
    setCookie("selected_azzet", azzetId, 1);

    $.ajax({
      type: "GET",
      url: "/azzets/" + azzetId + "/total_trades",
      success: function(data){

        if(data.length > 0)
        {
          won = data[2] != null ? data[2].total_trades : 0;
          tie = data[1] != null ? data[1].total_trades : 0;
          lost = data[0] != null ? data[0].total_trades : 0;
          total_trades = won + tie + lost;
          success_rate = Math.round(((won + tie) / total_trades) * 100);

          $("#lbl_azzet_rate").text(success_rate + " %");
        }
        else
        {
          $("#lbl_azzet_rate").text("N/A"); 
        }
      }
    });
  }

  function calcule_percent(){
      amount = $("#trade_Amount").val();
      percent = Math.round((amount / account_balance) * 100);
      
      $("#lbl_percent_suggested").text(percent + " %");
  }

  function calcule_onprofit(){
      amount = $("#trade_Amount").val();
      onprofit = $("#trade_OnProfit").val();
      profit = ((amount * onprofit) / 100).toFixed(2);
         
      $("#lbl_onprofit_payout").text("$" + (parseFloat(amount) + parseFloat(profit)) + " ($" + profit +")");
  }

  function calcule_onlost(){
      amount = $("#trade_Amount").val();
      onprofit = $("#trade_OnLoss").val();
      profit = ((amount * onprofit) / 100).toFixed(2);

      $("#lbl_onlost_payout").text("$ " + profit);
      $("#lbl_onlost_payout").text("$" + profit + " ($" + (parseFloat(profit) - parseFloat(amount)) +")");
  }

  function setCookie(cname, cvalue, exdays) {
      var d = new Date();
      d.setTime(d.getTime() + (exdays*24*60*60*1000));
      var expires = "expires="+d.toUTCString();
      document.cookie = cname + "=" + cvalue + "; " + expires;
  }

  function getCookie(cname) {
      var name = cname + "=";
      var ca = document.cookie.split(';');
      for(var i=0; i<ca.length; i++) {
          var c = ca[i];
          while (c.charAt(0)==' ') c = c.substring(1);
          if (c.indexOf(name) == 0) return c.substring(name.length, c.length);
      }
      return "";
  }

  function checkCookie() {
      var user = getCookie("username");
      if (user != "") {
          alert("Welcome again " + user);
      } else {
          user = prompt("Please enter your name:", "");
          if (user != "" && user != null) {
              setCookie("username", user, 365);
          }
      }
  }
</script>
